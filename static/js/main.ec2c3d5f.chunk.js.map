{"version":3,"sources":["information/apiInfo.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Loader.js","components/Modal.js","App.js","index.js"],"names":["fetchImages","searchItem","page","a","fetch","rawResult","ok","json","result","Searchbar","state","value","changeHandler","e","setState","target","submitHandler","event","preventDefault","trim","props","onSubmit","toast","error","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","webformatURL","alt","onClick","showImageHandle","propType","img","PropTypes","string","isRequired","func","ImageGallery","images","map","image","index","showImageHandler","largeImageURL","id","Button","loadMoreHandler","Loader","color","height","width","modalRoot","document","querySelector","Modal","keyDownHandler","code","onClose","overlayClickHandler","currentTarget","window","addEventListener","removeEventListener","createPortal","largeImgURL","App","isLoading","openModal","maxPages","newElementHight","closeModal","imageUrl","scrollToHandler","scrollTo","top","documentElement","scrollHeight","behavior","searchImagesHandler","total","Math","ceil","totalHits","hits","info","console","toString","min","onSubmitHandler","searchString","prevProps","prevState","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec2c3d5f.chunk.js","sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '11753469-fae5ae7c0c549b8c5c7373ba2';\r\n\r\nconst fetchImages = async (searchItem, page) => {\r\n  const rawResult = await fetch(\r\n    `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n\r\n  if (!rawResult.ok) {\r\n    throw rawResult;\r\n  }\r\n\r\n  const result = await rawResult.json();\r\n\r\n  return result;\r\n};\r\n\r\nexport default fetchImages;\r\n","import { toast } from 'react-toastify';\r\nimport { Component } from 'react';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.value.trim() === '') {\r\n      toast.error('Please enter search request!');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.value);\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.submitHandler}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.changeHandler}\r\n            value={this.state.value}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  render() {\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        <img\r\n          src={this.props.webformatURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n          onClick={this.props.showImageHandle}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propType = {\r\n  img: PropTypes.string.isRequired,\r\n  showImageHandle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import { Component } from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\n\r\nclass ImageGallery extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {this.props.images.map((image, index) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              webformatURL={image.webformatURL}\r\n              showImageHandle={this.props.showImageHandler(image.largeImageURL)}\r\n              index={index}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"Button\"\r\n        onClick={this.props.loadMoreHandler}\r\n      >\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propType = {\r\n  loadMoreHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Spinner from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Spinner type=\"ThreeDots\" color=\"#00BFFF\" height={150} width={150} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modalRoot');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  keyDownHandler = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  overlayClickHandler = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.overlayClickHandler}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImgURL} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Component } from 'react';\r\n\r\nimport fetchImages from './information/apiInfo';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Loader from './components/Loader';\r\nimport Modal from './components/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    searchItem: '',\r\n    page: 1,\r\n    isLoading: false,\r\n    openModal: false,\r\n    error: '',\r\n  };\r\n\r\n  maxPages = 0;\r\n  largeImgURL = '';\r\n  newElementHight = 0;\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      (prevState.searchItem !== this.state.searchItem &&\r\n        this.state.searchItem !== '') ||\r\n      prevState.page !== this.state.page\r\n    ) {\r\n      this.searchImagesHandler();\r\n    }\r\n    /* if (\r\n      prevState.images.length !== this.state.images.length &&\r\n      prevState.images.length !== 0\r\n    ) {\r\n      this.scrollToHandler();\r\n    } */\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.largeImgURL = '';\r\n    this.setState({ openModal: false });\r\n  };\r\n\r\n  showImageHandler = imageUrl => () => {\r\n    this.largeImgURL = imageUrl;\r\n    this.setState({ openModal: true });\r\n  };\r\n\r\n  scrollToHandler = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  searchImagesHandler = async () => {\r\n    const { searchItem, page } = this.state;\r\n    this.setState({ isLoading: true, error: '' });\r\n    try {\r\n      const result = await fetchImages(searchItem, page);\r\n\r\n      if (result.total !== 0) {\r\n        this.maxPages = Math.ceil(result.totalHits / 12);\r\n\r\n        this.setState(({ images }) => ({\r\n          images: [...images, ...result.hits],\r\n        }));\r\n\r\n        this.scrollToHandler();\r\n      } else {\r\n        toast.info(`Nothing found for ${searchItem}`);\r\n        this.setState(() => ({\r\n          images: [],\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.setState(() => ({ error: error.toString() }));\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  loadMoreHandler = () => {\r\n    this.setState(() => ({\r\n      page: Math.min(this.maxPages, this.state.page + 1),\r\n    }));\r\n  };\r\n\r\n  onSubmitHandler = searchString => {\r\n    this.maxPages = 0;\r\n\r\n    this.setState(() => ({\r\n      images: [],\r\n      searchItem: searchString,\r\n      page: 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.onSubmitHandler} />\r\n        {this.state.error ? (\r\n          <p className=\"ErrorText\">{this.state.error}</p>\r\n        ) : (\r\n          <ImageGallery\r\n            images={this.state.images}\r\n            showImageHandler={this.showImageHandler}\r\n            scrollToHandler={this.scrollToHandler}\r\n          />\r\n        )}\r\n        {this.state.isLoading && <Loader />}\r\n        {this.state.page < this.maxPages && (\r\n          <Button loadMoreHandler={this.loadMoreHandler} />\r\n        )}\r\n        {this.state.openModal && (\r\n          <Modal\r\n            largeImgURL={this.largeImgURL}\r\n            onClose={this.closeModal}\r\n          ></Modal>\r\n        )}\r\n        <ToastContainer autoClose={2000} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}